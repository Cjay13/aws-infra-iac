name: "Terraform-Plan-Apply"
on:
  push:
    branches:
      - stage
      - main
    paths:
      - Terraform/**
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
  TF_STATE_BUCKET: ${{ secrets.BUCKET_TF_STATE}}
  AWS_REGION: ap-southeast-2
  EKS_CLUSTER: ecom-eks
  
jobs:
  terraform:
    name: "Terraform plan and apply"
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    defaults:
      run:
        shell: bash
        working-directory: ./Terraform
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.REPO_TOKEN }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}

      - name: Run Trivy IaC scan
        if: github.ref == 'refs/heads/stage'
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "config"
          hide-progress: true
          format: "sarif"
          output: "trivy-results.sarif"
          exit-code: "0"
          ignore-unfixed: true
          severity: "CRITICAL,HIGH"

      - name: Upload Trivy scan results to GitHub Security tab
        if: github.ref == 'refs/heads/stage'
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "trivy-results.sarif"

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform init
        id: init
        run: |
          terraform init \
            -backend-config="bucket=$TF_STATE_BUCKET" \
            -backend-config="dynamodb_table=terraform-state-lock" \
            -backend-config="key=ecom-state/terraform.tfstate"

      - name: Terraform validate
        id: validate
        if: github.ref == 'refs/heads/stage'
        run: terraform validate

      - name: Terraform plan
        id: plan
        run: terraform plan -no-color -input=false -out planfile-${{ github.sha }}

      - name: Upload Terraform plan file
        if: github.ref == 'refs/heads/stage'
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: ./Terraform/planfile-${{ github.sha }}

      - name: Terraform apply
        id: apply
        if: github.ref == 'refs/heads/main' && steps.plan.outcome == 'success'
        run: terraform apply -auto-approve -input=false -parallelism=1 planfile

      - name: Get kubeconfig file
        id: kubeconfig
        if: github.ref == 'refs/heads/main' && steps.apply.outcome == 'success'
        run: aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.EKS_CLUSTER }}

      - name: Install ingress controller
        id: ingress
        if: github.ref == 'refs/heads/main' && steps.kubeconfig.outcome == 'success'
        run: kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.8.2/deploy/static/provider/aws/deploy.yaml

      # - name: Terraform destroy
      #   id: destroy
      #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      #   run: terraform destroy -auto-approve -input=false -parallelism=1
